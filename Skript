#!/bin/bash

# Setze die notwendigen Variablen für die EC2-Installation
echo "Gib einen Namen für den neuen SSH-Schlüssel ein: "
read SSHKEY_NAME

# Stelle sicher, dass die Verzeichnisse .ssh und .ssh/aws existieren
mkdir -p ~/.ssh/aws

# Setze Berechtigungen für die Verzeichnisse .ssh und .ssh/aws
echo "Setze Berechtigungen für die Verzeichnisse .ssh und .ssh/aws..."
chmod 700 ~/.ssh
chmod 700 ~/.ssh/aws

# Erstelle ein neues SSH-Schlüsselpaar
echo "Erstelle ein neues SSH-Schlüsselpaar..."
aws ec2 create-key-pair \
    --key-name $SSHKEY_NAME \
    --key-type rsa \
    --query 'KeyMaterial' \
    --output text > ~/.ssh/aws/$SSHKEY_NAME.pem

# Setze die richtigen Berechtigungen für den SSH-Schlüssel
chmod 400 ~/.ssh/aws/$SSHKEY_NAME.pem

echo "SSH-Schlüsselpaar wurde erstellt und unter ~/.ssh/aws/$SSHKEY_NAME.pem gespeichert"

# Erstelle die Sicherheitsgruppe
SEC_GROUP_NAME="wordpressinstance-sec-group"
echo "Erstelle Sicherheitsgruppe: $SEC_GROUP_NAME"
SEC_GROUP_ID=$(aws ec2 create-security-group \
    --group-name $SEC_GROUP_NAME \
    --description "Sicherheitsgruppe für die WordPress EC2-Instanz" \
    --query 'GroupId' \
    --output text)

# Öffne HTTP (Port 80) und SSH (Port 22)
aws ec2 authorize-security-group-ingress \
    --group-id $SEC_GROUP_ID \
    --protocol tcp \
    --port 80 \
    --cidr 0.0.0.0/0

aws ec2 authorize-security-group-ingress \
    --group-id $SEC_GROUP_ID \
    --protocol tcp \
    --port 22 \
    --cidr 0.0.0.0/0

# Erstelle ein User-Data-Skript für die EC2-Instanz-Einrichtung
cat > ~/wordpress-user-data.yml << END
#cloud-config
package_update: true
package_upgrade: true
packages:
  - apache2
  - mysql-server
  - mysql-client
  - php
  - libapache2-mod-php
  - php-mysql
runcmd:
  - systemctl enable apache2 # Apache-Server beim Systemstart aktivieren
  - systemctl start apache2  # Apache-Server starten
  - mysql -u root -e "CREATE DATABASE wordpress;" # WordPress-Datenbank erstellen
  - mysql -u root -e "CREATE USER 'wordpressuser'@'localhost' IDENTIFIED BY 'securepassword';"
  - mysql -u root -e "GRANT ALL PRIVILEGES ON wordpress.* TO 'wordpressuser'@'localhost';"
  - mysql -u root -e "FLUSH PRIVILEGES;" # Berechtigungen anwenden
  - cd /var/www/html
  - rm -f index.html # Entferne die Standardseite
  - wget https://wordpress.org/latest.tar.gz # Lade die neueste WordPress-Version herunter
  - tar -xzf latest.tar.gz
  - mv wordpress/* .
  - rm -rf wordpress latest.tar.gz
  - cp wp-config-sample.php wp-config.php
  - sed -i "s/database_name_here/wordpress/" wp-config.php
  - sed -i "s/username_here/wordpressuser/" wp-config.php
  - sed -i "s/password_here/securepassword/" wp-config.php
  - chown -R www-data:www-data /var/www/html # Setze Dateibesitzer auf Apache-Nutzer
  - chmod -R 755 /var/www/html
END

# Starte eine EC2-Instanz
echo "Starte EC2-Instanz..."
INSTANCE_ID=$(aws ec2 run-instances \
    --image-id ami-08c40ec9ead489470 \
    --instance-type t2.micro \
    --key-name $SSHKEY_NAME \
    --security-group-ids $SEC_GROUP_ID \
    --user-data file://~/wordpress-user-data.yml \
    --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=WordPressInstance}]' \
    --query 'Instances[0].InstanceId' \
    --output text)

# Warte, bis die EC2-Instanz den Status "running" erreicht
aws ec2 wait instance-running --instance-ids $INSTANCE_ID

# Hole die öffentliche IP-Adresse der Instanz
PUBLIC_IP=$(aws ec2 describe-instances \
    --instance-ids $INSTANCE_ID \
    --query 'Reservations[0].Instances[0].PublicIpAddress' \
    --output text)

# Gib die Verbindungsdetails aus
echo "Die WordPress-Instanz ist bereit!"
echo "Verbinde dich mit folgendem Befehl mit dem Server:"
echo "ssh -i ~/.ssh/aws/$SSHKEY_NAME.pem ubuntu@$PUBLIC_IP"
echo "Öffne deinen Browser und navigiere zu: http://$PUBLIC_IP, um die WordPress-Einrichtung abzuschliessen."

# Skript zur Bereinigung aller erstellten Ressourcen
cat > ~/cleanup-wordpress.sh << CLEANUP
#!/bin/bash

# Beende die EC2-Instanz
echo "Beende EC2-Instanz..."
aws ec2 terminate-instances --instance-ids $INSTANCE_ID
aws ec2 wait instance-terminated --instance-ids $INSTANCE_ID

# Lösche die Sicherheitsgruppe
echo "Lösche Sicherheitsgruppe: $SEC_GROUP_NAME"
aws ec2 delete-security-group --group-id $SEC_GROUP_ID

# Lösche das SSH-Schlüsselpaar
echo "Lösche SSH-Schlüsselpaar: $SSHKEY_NAME"
aws ec2 delete-key-pair --key-name $SSHKEY_NAME

# Entferne die lokale private Schlüsseldatei
echo "Entferne lokale private Schlüsseldatei..."
rm ~/.ssh/aws/$SSHKEY_NAME.pem

echo "Alle Ressourcen wurden bereinigt."
CLEANUP

chmod +x ~/cleanup-wordpress.sh
echo "Bereinigungs-Skript erstellt unter ~/cleanup-wordpress.sh. Führe dieses Skript aus, um alle Ressourcen zu löschen."
